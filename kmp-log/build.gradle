plugins {
    id "org.jetbrains.kotlin.multiplatform"
    id "com.android.library"
}


ext.artifactName = "kmp-log"

ext.artifactId = ext.artifactName
ext.libraryName = ext.artifactName


//@OptIn(ExperimentalKotlinGradlePluginApi::class)
kotlin {
    // Enable the default target hierarchy:
    targetHierarchy.default()

    jvm {
        jvmToolchain(8)
//        withJava() // not allowed if android { } is present

        testRuns["test"].executionTask.configure {
            useJUnitPlatform()

            testLogging {     // This is for logging and can be removed.
                events("passed", "skipped", "failed")
            }
        }
    }

    android {
        compilations.all {
            kotlinOptions.jvmTarget = "1.8"
        }
    }

    js(IR) {
        moduleName = "kmplog"
//        binaries.executable()

        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                    useFirefoxHeadless()
                }
            }
        }

        nodejs()
    }


    linuxX64()
    mingwX64()


    ios {
        binaries {
            framework {
                baseName = "kmp-log"
            }
        }
    }
    iosSimulatorArm64()
    macosX64()
    macosArm64()
    watchos()
    watchosSimulatorArm64()
    tvos()
    tvosSimulatorArm64()


    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation kotlin("reflect")
            }
        }
        commonTest {
            dependencies {
                implementation kotlin("test")
            }
        }


        javaAndNativeCommonMain {
            dependsOn(commonMain)
        }


        javaCommonMain {
            dependsOn(javaAndNativeCommonMain)

            dependencies {
                compileOnly "org.slf4j:slf4j-api:$slf4jVersion"
            }
        }

        jvmMain {
            dependsOn(javaCommonMain)
        }

        jvmTest.dependencies {
            implementation "org.assertj:assertj-core:$assertJVersion"
            implementation("io.mockk:mockk:1.13.5") {
                exclude(group: "org.slf4j")
            }

            implementation "ch.qos.logback:logback-classic:1.2.3"
        }

        androidMain {
            dependsOn(javaCommonMain)
        }

        jsMain.dependencies {

        }

        nativeMain {
            dependsOn(javaAndNativeCommonMain)
        }
        linuxAndMingwMain {
            dependsOn(nativeMain)
        }
        linuxX64Main {
            dependsOn(linuxAndMingwMain)
        }
        mingwX64Main {
            dependsOn(linuxAndMingwMain)
        }
    }
}

android {
    namespace = "net.codinux.log"
    sourceSets["main"].manifest.srcFile("src/androidMain/AndroidManifest.xml")

    compileSdk(33)
    defaultConfig {
        minSdkVersion(21)
        targetSdkVersion(33)
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            // Otherwise we get this exception in tests:
            // Method e in android.util.Log not mocked. See https://developer.android.com/r/studio-ui/build/not-mocked for details.
            setReturnDefaultValues(true)
        }
    }
}


apply from: "../publish.gradle.kts"